[project]
name = "genai-doc-classification"
version = "0.1.0"
description = "A serverless document classification system using AWS AI services"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT-0" }
authors = [
    { name = "AWS Solutions Library", email = "aws-solutions-library@amazon.com" }
]
keywords = ["document", "classification", "ai", "aws", "serverless", "bedrock"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "boto3>=1.39.4",
    "botocore>=1.39.4",
    "pydantic>=2.0.0",
    "pymupdf>=1.26.3",
    "python-json-logger>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
textract = [
    "amazon-textract-textractor[pandas]>=1.9.2",
    "Pillow>=11.2.1",
    "PyMuPDF>=1.25.5",
    "numpy>=1.26.4",
    "pandas>=2.2.3",
    "pytesseract>=0.3.10",
]
bedrock = [
    "anthropic>=0.25.0",
    "langchain-aws>=0.1.0",
    "langchain-community>=0.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py310']
line-length = 88

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests that require AWS resources",
    "slow: Slow running tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
